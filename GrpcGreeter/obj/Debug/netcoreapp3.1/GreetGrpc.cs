// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcGreeter {
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    static readonly grpc::Marshaller<global::GrpcGreeter.Id> __Marshaller_greet_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Amount> __Marshaller_greet_Amount = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Amount.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.UserToFound> __Marshaller_greet_UserToFound = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.UserToFound.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Added> __Marshaller_greet_Added = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Added.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.UserAmount> __Marshaller_greet_UserAmount = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.UserAmount.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.FoundOwner> __Marshaller_greet_FoundOwner = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.FoundOwner.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcGreeter.Id, global::GrpcGreeter.Amount> __Method_GetFoundBalance = new grpc::Method<global::GrpcGreeter.Id, global::GrpcGreeter.Amount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFoundBalance",
        __Marshaller_greet_Id,
        __Marshaller_greet_Amount);

    static readonly grpc::Method<global::GrpcGreeter.Id, global::GrpcGreeter.Amount> __Method_GetUserBalance = new grpc::Method<global::GrpcGreeter.Id, global::GrpcGreeter.Amount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserBalance",
        __Marshaller_greet_Id,
        __Marshaller_greet_Amount);

    static readonly grpc::Method<global::GrpcGreeter.UserToFound, global::GrpcGreeter.Added> __Method_GiveToFound = new grpc::Method<global::GrpcGreeter.UserToFound, global::GrpcGreeter.Added>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GiveToFound",
        __Marshaller_greet_UserToFound,
        __Marshaller_greet_Added);

    static readonly grpc::Method<global::GrpcGreeter.UserAmount, global::GrpcGreeter.Added> __Method_AddBalance = new grpc::Method<global::GrpcGreeter.UserAmount, global::GrpcGreeter.Added>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBalance",
        __Marshaller_greet_UserAmount,
        __Marshaller_greet_Added);

    static readonly grpc::Method<global::GrpcGreeter.FoundOwner, global::GrpcGreeter.Added> __Method_CreateFound = new grpc::Method<global::GrpcGreeter.FoundOwner, global::GrpcGreeter.Added>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFound",
        __Marshaller_greet_FoundOwner,
        __Marshaller_greet_Added);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcGreeter.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.Amount> GetFoundBalance(global::GrpcGreeter.Id request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.Amount> GetUserBalance(global::GrpcGreeter.Id request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.Added> GiveToFound(global::GrpcGreeter.UserToFound request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.Added> AddBalance(global::GrpcGreeter.UserAmount request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.Added> CreateFound(global::GrpcGreeter.FoundOwner request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetFoundBalance, serviceImpl.GetFoundBalance)
          .AddMethod(__Method_GetUserBalance, serviceImpl.GetUserBalance)
          .AddMethod(__Method_GiveToFound, serviceImpl.GiveToFound)
          .AddMethod(__Method_AddBalance, serviceImpl.AddBalance)
          .AddMethod(__Method_CreateFound, serviceImpl.CreateFound).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetFoundBalance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.Id, global::GrpcGreeter.Amount>(serviceImpl.GetFoundBalance));
      serviceBinder.AddMethod(__Method_GetUserBalance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.Id, global::GrpcGreeter.Amount>(serviceImpl.GetUserBalance));
      serviceBinder.AddMethod(__Method_GiveToFound, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.UserToFound, global::GrpcGreeter.Added>(serviceImpl.GiveToFound));
      serviceBinder.AddMethod(__Method_AddBalance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.UserAmount, global::GrpcGreeter.Added>(serviceImpl.AddBalance));
      serviceBinder.AddMethod(__Method_CreateFound, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.FoundOwner, global::GrpcGreeter.Added>(serviceImpl.CreateFound));
    }

  }
}
#endregion
